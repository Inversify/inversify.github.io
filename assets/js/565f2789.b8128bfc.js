"use strict";(self.webpackChunk_inversifyjs_inversify_docs_site=self.webpackChunk_inversifyjs_inversify_docs_site||[]).push([["4306"],{325:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>s,metadata:()=>i,assets:()=>l,toc:()=>h,contentTitle:()=>c});var i=JSON.parse('{"id":"fundamentals/lifecycle/deactivation","title":"Deactivation","description":"Whenever a singleton scoped service is unbound, the deactivation event is dispatched. A deactivation handler receives a resolved value and returns nothing.","source":"@site/docs/fundamentals/lifecycle/deactivation.mdx","sourceDirName":"fundamentals/lifecycle","slug":"/fundamentals/lifecycle/deactivation","permalink":"/docs/next/fundamentals/lifecycle/deactivation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Deactivation"},"sidebar":"tutorialSidebar","previous":{"title":"Activation","permalink":"/docs/next/fundamentals/lifecycle/activation"},"next":{"title":"Inheritance","permalink":"/docs/next/fundamentals/inheritance"}}'),a=t("1514"),o=t("8456"),d=t("2382"),r=t("9471");let s={sidebar_position:2,title:"Deactivation"},c=void 0,l={},h=[];function p(e){let n={a:"a",code:"code",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Whenever a singleton scoped service is unbound, the deactivation event is dispatched. A deactivation handler receives a resolved value and returns nothing."}),"\n",(0,a.jsx)(r.Z,{language:"ts",children:d}),"\n",(0,a.jsx)(n.p,{children:"It's possible to add a deactivation handler in multiple ways"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Adding the handler to the ",(0,a.jsx)(n.a,{href:"/docs/next/api/container#ondeactivation",children:"container"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Adding the handler to a ",(0,a.jsx)(n.a,{href:"/docs/next/api/binding-syntax#ondeactivation",children:"binding"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Adding the handler to the class through the ",(0,a.jsx)(n.a,{href:"/docs/next/api/decorator#predestroy",children:"preDestroy decorator"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Handlers added to the container are the first ones to be resolved. Any handler added to a child container is called before the ones added to their parent. Relevant bindings from the container are called next and finally the ",(0,a.jsx)(n.code,{children:"preDestroy"}),' method is called. In the example above, relevant bindings are those bindings bound to the unbinded "Destroyable" service identifier.']})]})}function u(e={}){let{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},2382:function(e){e.exports="import { Container } from 'inversify';\n\nvoid (async () => {\n  // Begin-example\n  interface Weapon {\n    damage: number;\n  }\n\n  class Katana implements Weapon {\n    readonly #damage: number = 10;\n\n    public get damage(): number {\n      return this.#damage;\n    }\n  }\n\n  const container: Container = new Container();\n\n  container.bind<Weapon>('Weapon').to(Katana).inSingletonScope();\n\n  container.get('Weapon');\n\n  container.onDeactivation('Weapon', (weapon: Weapon): void | Promise<void> => {\n    console.log(`Deactivating weapon with damage ${weapon.damage.toString()}`);\n  });\n\n  await container.unbind('Weapon');\n  // End-example\n})();\n"}}]);